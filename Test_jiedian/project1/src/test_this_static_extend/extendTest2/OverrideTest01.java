package test_this_static_extend.extendTest2;
/**
 * 回归java语言中的方法重载：
 *
 * 		1.方法重载又被称为：Overload
 *
 * 		2.方法重载什么时候使用？
 * 			当在同一个类当中，方法完成的功能是相似的，建议方法名相同，这样方便程序员的编程
 * 			就像在调用一个方法一样，代码美观。
 *
 * 		3.什么条件满足之后构成方法重载？
 * 			*在同一个类当中
 * 			*方法名相同
 * 			*形式参数列表不同【个数、类型、顺序】
 *
 *		4.方法重载和什么无关？
 *			*和修饰符列表无关
 *			*和返回值类型无关
 *
 *关于java语言中的方法覆盖：
 *
 *		1.方法覆盖又被称为方法重写，英语单词：Override【官方名称】/Overwrite
 *
 *		2.什么时候使用方法覆盖？
 *				当父类中的方法已经无法满足子类中的业务需求，
 *				子类必须将从父类中继承过来的方法进行重新编写
 *				这个重新编写的过程被称为方法覆盖
 *
 *		3.什么条件满足时会发生方法覆盖【代码满足什么条件时，就构成方法覆盖】
 *				*方法覆盖发生在具有继承关系的父子类中
 *				*方法覆盖的时候：返回值类型相同，方法名相同，形参列表相同
 *				*方法覆盖的时候：访问权限不能更低，可以更高
 *				*方法覆盖的时候：抛出异常不能跟多，可以更少【以后讲】
 *
 *		4.建议方法覆盖的时候，复制粘贴，防止出错，导致覆盖的不发生。
 *
 *		5.注意：
 *					私有方法不能继承，当然也不会发生方法覆盖
 *					构造方法不能继承，当然也不会发生方法覆盖
 *					静态方法不存在继承，当然也不会发生方法覆盖【讲完多态后】
 *					覆盖只针对方法，不针对属性
 *
 */
public class OverrideTest01 {
    public static void main(String[] args) {

        //创建动物对象
        Animal a=new Animal();
        a.move();

        //创建猫对象
        Cat c=new Cat();
        c.move();

        //创建鸟对象
        Bird b=new Bird();
        b.move();

        //创建鹦鹉对象
        Yingwu y=new Yingwu();
        y.move();

        //鹦鹉类继承的是鸟类
        //鸟类继承的是动物类，但存在方法覆盖，鸟儿在飞翔！
        //所以鹦鹉类的方法覆盖只会对鸟类的方法发生覆盖，并不会对动物类发生覆盖
        //去除方法覆盖，也只会输出 鸟儿在飞翔！

    }
}
